plugins {
    id 'java-library'
    id 'java-conventions'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.flywaydb.flyway' version '10.13.0'
}

group = 'com.kaua.payment.infrastructure'

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation 'org.postgresql:postgresql'

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.2.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    implementation 'org.flywaydb:flyway-core'

    implementation 'com.fasterxml.jackson.module:jackson-module-afterburner:2.15.3'

    implementation 'com.mercadopago:sdk-java:2.1.23'

    testRuntimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation(project(path: ':domain', configuration: 'testClasses'))
}

testCodeCoverageReport {
    dependsOn(test)

    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: [
                            'com/kaua/payment/infrastructure/configurations/*',
                            'com/kaua/payment/infrastructure/Main.class'
                    ])
                })
        )
    }
}